services:
  db:
    image: mysql:8.1
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
      --innodb-log-buffer-size=64M
      --innodb-flush-method=O_DIRECT
      --innodb-flush-log-at-trx-commit=2
      --innodb-file-per-table=1
      --skip-name-resolve
      --max-connections=200
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: onlylocal # TODO: Ideally this should not be hardcoded but the intentions are not to expose this database publicly
    volumes:
      - ./data/us-gaap.db:/var/lib/mysql
    ports:
      - "127.0.0.1:3307:3306"
    deploy:
      resources:
        limits:
          cpus: "4" # Allocate 4 CPU cores
          memory: 2g

  db_test:
    profiles: [test] # Prevent auto-start with `docker compose up`
    image: mysql:8.1
    container_name: us_gaap_test_db
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --innodb-log-buffer-size=32M
      --innodb-flush-method=O_DIRECT
      --innodb-flush-log-at-trx-commit=2
      --innodb-file-per-table=1
      --skip-name-resolve
      --max-connections=50
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: onlylocal
    ports:
      - "127.0.0.1:3308:3306"
    # volumes: # Intentionally not making a volume mount at this moment; very light DB
    #   - ./data/us-gaap-test.db:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1g

  # i.e., docker compose --profile test up --build simd_r_drive_ws_server_test
  simd_r_drive_ws_server_test:
    profiles: [test] # only with `--profile test`
    build:
      context: .
      dockerfile: Dockerfile.simd-r-drive-ci-server
      args:
        SERVER_ARGS: "data.bin --listen 0.0.0.0:8080"
    ports:
      - 8081:8080
    depends_on:
      - db_test # optional; remove if not needed
    restart: "no"
