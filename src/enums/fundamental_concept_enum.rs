use std::borrow::Borrow;
use std::cmp::{Eq, PartialEq};
use strum_macros::{AsRefStr, Display, EnumString};

#[derive(Eq, PartialEq, Hash, Clone, EnumString, Display, AsRefStr, Debug)]
pub enum FundamentalConcept {
    Assets,
    BenefitsCostsExpenses,
    CommitmentsAndContingencies,
    ComprehensiveIncomeLoss,
    ComprehensiveIncomeLossAttributableToNoncontrollingInterest,
    ComprehensiveIncomeLossAttributableToParent,
    CostOfRevenue,
    CostsAndExpenses,
    CurrentAssets,
    CurrentLiabilities,
    Equity,
    EquityAttributableToNoncontrollingInterest,
    EquityAttributableToParent,
    ExchangeGainsLosses,
    ExtraordinaryItemsOfIncomeExpenseNetOfTax,
    GainLossOnSalePropertiesNetTax,
    GrossProfit,
    IncomeLossBeforeEquityMethodInvestments,
    IncomeLossFromContinuingOperationsAfterTax,
    IncomeLossFromContinuingOperationsBeforeTax,
    IncomeLossFromDiscontinuedOperationsNetOfTax,
    IncomeLossFromEquityMethodInvestments,
    IncomeStatementStartPeriodYearToDate,
    IncomeTaxExpenseBenefit,
    InterestAndDebtExpense,
    InterestAndDividendIncomeOperating,
    InterestExpenseOperating,
    InterestIncomeExpenseAfterProvisionForLosses,
    InterestIncomeExpenseOperatingNet,
    Liabilities,
    LiabilitiesAndEquity,
    NatureOfOperations,
    NetCashFlow,
    NetCashFlowContinuing,
    NetCashFlowDiscontinued,
    NetCashFlowFromFinancingActivities,
    NetCashFlowFromFinancingActivitiesContinuing,
    NetCashFlowFromFinancingActivitiesDiscontinued,
    NetCashFlowFromInvestingActivities,
    NetCashFlowFromInvestingActivitiesContinuing,
    NetCashFlowFromInvestingActivitiesDiscontinued,
    NetCashFlowFromOperatingActivities,
    NetCashFlowFromOperatingActivitiesContinuing,
    NetCashFlowFromOperatingActivitiesDiscontinued,
    NetIncomeLoss,
    NetIncomeLossAvailableToCommonStockholdersBasic,
    NetIncomeLossAttributableToNoncontrollingInterest,
    NetIncomeLossAttributableToParent,
    NoncurrentAssets,
    NoncurrentLiabilities,
    NoninterestExpense,
    NoninterestIncome,
    NonoperatingIncomeLoss,
    OperatingExpenses,
    OperatingIncomeLoss,
    OtherComprehensiveIncomeLoss,
    OtherOperatingIncomeExpenses,
    PreferredStockDividendsAndOtherAdjustments,
    ProvisionForLoanLeaseAndOtherLosses,
    RedeemableNoncontrollingInterest,
    ResearchAndDevelopment,
    Revenues,
    RevenuesExcludingInterestAndDividends,
    RevenuesNetInterestExpense,
    TemporaryEquity,
}

impl Borrow<str> for FundamentalConcept {
    fn borrow(&self) -> &str {
        self.as_ref() // Uses `AsRefStr` to return a static string reference
    }
}
